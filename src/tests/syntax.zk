// this is a single-lined comment (done)

/*
 this is a multi-lined comment (done)
*/

// use native library statement (semi-done)
use math; // use all of the math module
use { read_file, write_file } from fs; // use only the read and write methods from fs module


// include from file statement (done)
include "file.zk"; // include every exported value
include method from "file.zk"; // include only a single exported value
include { method1, method2 } from "file.zk"; // include specific exported values


// integer varaible declaration (done)
let x: int = 45; 
const y: int = 90;

// export from file statement (done)
export x, y;


// floating point variable declaration (done)
let a: float = 12.34;
const b: float = 56.78;

// string variable declaration (done)
let z: string = "Hello World!";


// log to the console with println (done)
@println => | z | // output: Hello World!

// function declaration (done)
func add | a: int, b: int | {
  return a + b;
}


// lambda function (done)
const multiply -> | a: float, b: float | { 
  return a * b;
}


// method call expressions (done)
add => | x, y |
multiply => | a, b |


// if-else statement (done)
if x == 45 {
  x + 5
} else if x == 40 {
  x + 10
} else {
  x + 15
}


// object declaration (done)
let myObj: obj = {
  key1: "value1",
  key2: "value2"
};

// for-loop (done)
for |key, value| in myObj {
  @println => |"key: " + key, "value: " + value|
}


// arithmitic operators (done)
x + y
x - y
x * y
x / y


// assignment operators (done)
x += y
x -= y
x *= y
x /= y


// try-catch statement (not done)
try {
  x + y
} catch |e| {
  x * y
}