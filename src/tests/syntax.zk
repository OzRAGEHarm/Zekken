// this is a single-lined comment

/*
 this is a multi-lined comment
*/

// use native library statement
use math; // use all of the math module
use { read_file, write_file } from fs; // use only the read and write methods from fs module


// include from file statement
include "file.zk"; // include every exported value
include method from "file.zk";
include { method1, method2 } from "file.zk";


// integer varaible declaration
let x: int = 45; 
const y: int = 90;

// export from file statement
export x, y;


// floating point variable declaration
let a: float = 12.34;
const b: float = 56.78;

// string variable declaration
let z: string = "Hello World!";


// log to the console with println
@println => | z | // output: Hello World!

// function declaration (done)
func add | a: int, b: int | {
  return a + b;
}


// lambda function (done)
const multiply -> | a: float, b: float | { 
  return a * b;
}


// method call expressions (done)
add => | x, y |
multiply => | a, b |


// if-else statement (done)
if x == 45 {
  x + 5
} else if x == 40 {
  x + 10
} else {
  x + 15
}


// object declaration
obj z {
  key1: "value1",
  key2: "value2"
}

// for-loop
for x in z {
  println(x)
}


// arithmitic operators
x + y
x - y
x * y
x / y


// assignment operators
x += y
x -= y
x *= y
x /= y


// try-catch statement
try {
  x + y
} catch |e| {
  x * y
}